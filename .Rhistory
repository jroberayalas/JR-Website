chains = 4, iter = 2000, warmup = 500, cores = 4)
stanplot(m5.8,
type = "areas",
prob = .5,
point_est = "median") +
labs(title = "The coefficient plot for the two-leg model",
subtitle = "Holy smokes; look at the widths of those betas!") +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
N <- 100
set.seed(851)
d <-
tibble(height    = rnorm(N, mean = 10, sd = 2),
leg_prop  = runif(N, min = 0.4, max = 0.5),
leg_left  = leg_prop*height + rnorm(N, mean = 0, sd = 0.02),
leg_right = leg_prop*height + rnorm(N, mean = 0, sd = 0.02))
d %>%
select(leg_left:leg_right) %>%
cor() %>%
round(digits = 4)
pairs(d)
N <- 100
set.seed(851)
d <-
tibble(height    = rnorm(N, mean = 10, sd = 2),
leg_prop  = runif(N, min = 0.4, max = 0.5),
leg_left  = leg_prop*height + rnorm(N, mean = 0, sd = 0.02),
leg_right = leg_prop*height + rnorm(N, mean = 0, sd = 0.02))
d %>%
select(leg_left:leg_right) %>%
cor() %>%
round(digits = 4)
pairs(d)
m5.8 <-
brm(data = d, family = gaussian,
height ~ 1 + leg_left + leg_right,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(2,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
stanplot(m5.8,
type = "areas",
prob = .5,
point_est = "median") +
labs(title = "The coefficient plot for the two-leg model",
subtitle = "Holy smokes; look at the widths of those betas!") +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
pairs(m5.8, pars = parnames(m5.8)[2:3])
N <- 100
set.seed(851)
rho <- 0.7
x_pos <- rnorm( N )
x_neg <- rnorm( N , rho*x_pos ,
sqrt(1-rho^2) )
y <- rnorm( N , x_pos - x_neg )
d <- tibble(x_pos = rnorm( N ),
x_neg = rnorm( N , rho*x_pos , sqrt(1-rho^2) ),
y = rnorm( N , x_pos - x_neg ))
pairs(d)
N <- 100
set.seed(851)
rho <- 0.9
x_pos <- rnorm( N )
x_neg <- rnorm( N , rho*x_pos ,
sqrt(1-rho^2) )
y <- rnorm( N , x_pos - x_neg )
d <- tibble(x_pos = rnorm( N ),
x_neg = rnorm( N , rho*x_pos , sqrt(1-rho^2) ),
y = rnorm( N , x_pos - x_neg ))
pairs(d)
N <- 100
set.seed(851)
rho <- 0.7
x_pos <- rnorm( N )
x_neg <- rnorm( N , rho*x_pos ,
sqrt(1-rho^2) )
y <- rnorm( N , x_pos - x_neg , 0.01)
d <- tibble(x_pos = rnorm( N ),
x_neg = rnorm( N , rho*x_pos , sqrt(1-rho^2) ),
y = rnorm( N , x_pos - x_neg ))
pairs(d)
N <- 100
set.seed(851)
rho <- 0.7
x_pos <- rnorm( N )
x_neg <- rnorm( N , rho*x_pos ,
sqrt(1-rho^2) )
y <- rnorm( N , x_pos - x_neg , 0.001)
d <- tibble(x_pos = rnorm( N ),
x_neg = rnorm( N , rho*x_pos , sqrt(1-rho^2) ),
y = rnorm( N , x_pos - x_neg ))
pairs(d)
N <- 100
set.seed(851)
rho <- 0.7
x_pos <- rnorm( N )
x_neg <- rnorm( N , rho*x_pos ,
sqrt(1-rho^2) )
y <- rnorm( N , x_pos - x_neg  )
d <- tibble(x_pos = rnorm( N ),
x_neg = rnorm( N , rho*x_pos , sqrt(1-rho^2) ),
y = rnorm( N , x_pos - x_neg ))
pairs(d)
cor(d)
m5.7a <-
brm(data = d, family = gaussian,
y ~ 1 + x_pos,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
p5.7a <- stanplot(m5.7a,
type = "areas",
prob = .5,
point_est = "median") +
labs(title = "Model with x_pos") +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
m5.7b <-
brm(data = d, family = gaussian,
y ~ 1 + x_neg,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
p5.7b <- stanplot(m5.7b,
type = "areas",
prob = .5,
point_est = "median") +
labs(title = "Model with x_neg") +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
m5.7c <-
brm(data = d, family = gaussian,
y ~ 1 + x_pos + x_neg,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
cowplot::plot_grid(p5.7a, p5.7b, p5.7c, labels = NULL, nrow = 3, align = "v")
m5.7c <-
brm(data = d, family = gaussian,
y ~ 1 + x_pos + x_neg,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
p5.7c <- stanplot(m5.7c,
type = "areas",
prob = .5,
point_est = "median") +
labs(title = "Model with both") +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
cowplot::plot_grid(p5.7a, p5.7b, p5.7c, labels = NULL, nrow = 3, align = "v")
?stanplot
m5.7a <-
brm(data = d, family = gaussian,
y ~ 1 + x_pos,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
p5.7a <- stanplot(m5.7a,
type = "areas",
prob = .5,
point_est = "median",
pars = "^b_") +
labs(title = "Model with x_pos") +
xlim(-1.5, 1.5) +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
m5.7b <-
brm(data = d, family = gaussian,
y ~ 1 + x_neg,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
p5.7b <- stanplot(m5.7b,
type = "areas",
prob = .5,
point_est = "median",
pars = "^b_") +
labs(title = "Model with x_pos") +
xlim(-1.5, 1.5) +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
m5.7c <-
brm(data = d, family = gaussian,
y ~ 1 + x_pos + x_neg,
prior = c(set_prior("normal(10,100)", class = "Intercept"),
set_prior("normal(0,10)", class = "b"),
set_prior("cauchy(0,1)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
p5.7c <- stanplot(m5.7c,
type = "areas",
prob = .5,
point_est = "median",
pars = "^b_") +
labs(title = "Model with x_pos") +
xlim(-1.5, 1.5) +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
cowplot::plot_grid(p5.7a, p5.7b, p5.7c, labels = NULL, nrow = 3, align = "v")
cowplot::plot_grid(p5.7a, p5.7b, p5.7c, labels = NULL, nrow = 3, align = "v")
p5.7a
cowplot::plot_grid(p5.7a, p5.7b, p5.7c, labels = NULL, nrow = 3, align = "v")
p5.7a <- stanplot(m5.7a,
type = "areas",
prob = .5,
point_est = "median",
pars = "^b_") +
labs(title = "Model with x_pos") +
coord_cartesian(xlim = c(-1.5, 1.5)) +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
p5.7b <- stanplot(m5.7b,
type = "areas",
prob = .5,
point_est = "median",
pars = "^b_") +
labs(title = "Model with x_pos") +
coord_cartesian(xlim = c(-1.5, 1.5)) +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
p5.7c <- stanplot(m5.7c,
type = "areas",
prob = .5,
point_est = "median",
pars = "^b_") +
labs(title = "Model with x_pos") +
coord_cartesian(xlim = c(-1.5, 1.5)) +
theme_bw() +
theme(text = element_text(size = 14),
axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust = 0))
cowplot::plot_grid(p5.7a, p5.7b, p5.7c, labels = NULL, nrow = 3, align = "v")
install.packages("GGally")
N <- 100
set.seed(851)
d <-
tibble(height    = rnorm(N, mean = 10, sd = 2),
leg_prop  = runif(N, min = 0.4, max = 0.5),
leg_left  = leg_prop*height + rnorm(N, mean = 0, sd = 0.02),
leg_right = leg_prop*height + rnorm(N, mean = 0, sd = 0.02))
d %>%
select(leg_left:leg_right) %>%
cor() %>%
round(digits = 4)
library(GGally)
my_diag <- function(data, mapping, ...){
pd <- ggplot(data = data, mapping = mapping) +
geom_density(fill = "firebrick4", size = 0)
pd
}
my_lower <- function(data, mapping, ...){
pl <- ggplot(data = data, mapping = mapping) +
geom_smooth(method = "lm", color = "firebrick4", size = 1/3, se = F) +
geom_point(color = "firebrick", alpha = .8, size = 1/4)
pl
}
# Then plug those custom functions into ggpairs
ggpairs(data = d, columns = c(3:4, 6),
mapping = ggplot2::aes(color = "black"),
diag = list(continuous = my_diag),
lower = list(continuous = my_lower)) +
theme_bw() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = "white"))
ggpairs(d)
ggpairs(data = d, columns = c(1, 3:4))
N <- 100
set.seed(851)
d <-
tibble(height    = rnorm(N, mean = 10, sd = 2),
leg_prop  = runif(N, min = 0.4, max = 0.5),
leg_left  = leg_prop*height + rnorm(N, mean = 0, sd = 0.02),
leg_right = leg_prop*height + rnorm(N, mean = 0, sd = 0.02))
d %>%
select(leg_left:leg_right) %>%
cor() %>%
round(digits = 4)
library(GGally)
ggpairs(data = d, columns = c(1, 3:4))
my_diag <- function(data, mapping, ...){
pd <- ggplot(data = data, mapping = mapping) +
geom_density(fill = "firebrick4", size = 0)
pd
}
my_lower <- function(data, mapping, ...){
pl <- ggplot(data = data, mapping = mapping) +
geom_smooth(method = "lm", color = "firebrick4", size = 1/3, se = F) +
geom_point(color = "firebrick", alpha = .8, size = 1/4)
pl
}
# Then plug those custom functions into ggpairs
ggpairs(data = d, columns = c(1, 3:4),
mapping = ggplot2::aes(color = "black"),
diag = list(continuous = my_diag),
lower = list(continuous = my_lower)) +
theme_bw() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(fill = "white"))
library(rethinking)
data(Howell1)
d <- Howell1
rm(Howell1)
detach(package:rethinking, unload = T)
d %>%
glimpse()
library(rethinking)
data(Howell1)
d <- Howell1
rm(Howell1)
detach(package:rethinking, unload = T)
d %>%
glimpse()
m5.15 <-
brm(data = d, family = gaussian,
height ~ 1 + male,
prior = c(set_prior("normal(178, 100)", class = "Intercept"),
set_prior("normal(0, 10)", class = "b"),
set_prior("cauchy(0, 2)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
print(m5.15)
post <-
b5.15 %>%
posterior_samples() %>%
mutate(mu_male = b_Intercept + b_male) %>%
summarise(LL = quantile(mu_male, .025) %>% round(digits = 2),
UL = quantile(mu_male, .975) %>% round(digits = 2))
post <-
m5.15 %>%
posterior_samples() %>%
mutate(mu_male = b_Intercept + b_male) %>%
summarise(LL = quantile(mu_male, .025) %>% round(digits = 2),
UL = quantile(mu_male, .975) %>% round(digits = 2))
post
d <-
d %>%
mutate(female = 1 - male)
m5.15b <-
brm(data = d, family = gaussian,
height ~ 0 + male + female,
prior = c(set_prior("normal(178, 100)", class = "b"),
set_prior("cauchy(0, 2)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
print(m5.15b)
library(rethinking)
data(milk)
d <- milk
rm(milk)
detach(package:rethinking, unload = TRUE)
library(caret)
library(recipes)
rec <- recipe(~ ., data = d)
dummies <- rec %>% step_dummy(clade)
dummies <- prep(dummies, training = okc)
?recipe
rec <- recipe(d)
dummies <- prep(dummies, training = okc)
dummies <- rec %>% step_dummy(clade)
dummies <- prep(dummies, training = okc)
dummies
rec <- recipe(d, roles = "predictor")
rec <- recipe(d, roles = rep("predictor", ncol(d)))
dummies <- rec %>% step_dummy(clade)
dummies <- prep(dummies, training = okc)
dummies
rec <- recipe( ~ ., data = d)
rec
rec <- recipe(~ ., data = d)
rec
rec <- recipe( ~ ., data = d)
summary(rec)
recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d)
?bake
?juice
recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d) %>%
juice()
recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d, retain = TRUE) %>%
juice()
recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d, retain = TRUE) %>%
juice()
d
summary(d$clade)
m5.16 <-
brm(data = d, family = gaussian,
kcal.per.g ~ 1 + clade_New.World.Monkey + clade_Old.World.Monkey + clade_Strepsirrhine
prior = c(set_prior("normal(.6, 10)", class = "Intercept"),
m5.16 <-
brm(data = d, family = gaussian,
kcal.per.g ~ 1 + clade_New.World.Monkey + clade_Old.World.Monkey + clade_Strepsirrhine,
prior = c(set_prior("normal(.6, 10)", class = "Intercept"),
set_prior("normal(0, 1)", class = "b"),
set_prior("uniform(0, 10)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4,
control = list(adapt_delta = 0.8))
library(rethinking)
data(milk)
d <- milk
rm(milk)
detach(package:rethinking, unload = TRUE)
library(recipes)
d <- recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d, retain = TRUE) %>%
juice()
library(rethinking)
data(milk)
d <- milk
rm(milk)
detach(package:rethinking, unload = TRUE)
library(recipes)
d <- recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d, retain = TRUE) %>%
juice()
m5.16 <-
brm(data = d, family = gaussian,
kcal.per.g ~ 1 + clade_New.World.Monkey + clade_Old.World.Monkey + clade_Strepsirrhine,
prior = c(set_prior("normal(.6, 10)", class = "Intercept"),
set_prior("normal(0, 1)", class = "b"),
set_prior("uniform(0, 10)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4,
control = list(adapt_delta = 0.8))
m5.16 %>%
posterior_samples() %>%
mutate(mu.Ape = b_Intercept,
mu.NWM = b_Intercept + b_clade_New.World.Monkey,
mu.OWM = b_Intercept + b_clade_Old.World.Monkey,
mu.S   = b_Intercept + b_clade_Strepsirrhine) %>%
select(mu.Ape:mu.S) %>%
gather(parameter) %>%
group_by(parameter) %>%
summarise(median = median(value) %>% round(digits = 2),
LL = quantile(value, probs = .025) %>% round(digits = 2),
UL = quantile(value, probs = .975) %>% round(digits = 2))
m5.16 %>%
posterior_samples() %>%
mutate(dif = mu.NWM - mu.OWM) %>%
summarise(median = median(dif) %>% round(digits = 2),
LL = quantile(dif, probs = .025) %>% round(digits = 2),
UL = quantile(dif, probs = .975) %>% round(digits = 2))
m5.16 %>%
posterior_samples() %>%
mutate(mu.Ape = b_Intercept,
mu.NWM = b_Intercept + b_clade_New.World.Monkey,
mu.OWM = b_Intercept + b_clade_Old.World.Monkey,
mu.S   = b_Intercept + b_clade_Strepsirrhine) %>%
mutate(dif = mu.NWM - mu.OWM) %>%
summarise(median = median(dif) %>% round(digits = 2),
LL = quantile(dif, probs = .025) %>% round(digits = 2),
UL = quantile(dif, probs = .975) %>% round(digits = 2))
library(rethinking)
data(milk)
d <- milk
rm(milk)
detach(package:rethinking, unload = TRUE)
library(recipes)
d2 <- recipe( ~ ., data = d) %>%
step_dummy(clade) %>%
prep(training = d, retain = TRUE) %>%
juice()
m5.16_alt <-
brm(data = d, family = gaussian,
kcal.per.g ~ 0 + clade,
prior = c(set_prior("normal(.6, 10)", class = "b"),
set_prior("uniform(0, 10)", class = "sigma")),
chains = 4, iter = 2000, warmup = 500, cores = 4)
print(m5.16_alt)
data(cars)
rethinking::glimmer(dist ~ speed , data = cars)
cars
data("cars")
cars
head(cars)
d
rethinking::glimmer(kcal.per.g ~ perc.fat , data = d)
blogdown:::serve_site()
