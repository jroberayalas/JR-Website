color = cont_africa,
group = cont_africa)) +
geom_point(aes(y = log_gdp, color = cont_africa),
size = 2/3) +
scale_x_continuous(expand = c(0, 0)) +
labs(x = "Terrain Ruggedness Index",
y = "log GDP from year 2000") +
theme(text = element_text(family = "Times"),
legend.position = c(.69, .94),
legend.title = element_blank(),
legend.direction = "horizontal")
nd <-
tibble(rugged = rep(seq(from = 0,
to = 6.3,
length.out = 30),
times = 2),
cont_africa = rep(0:1, each = 30))
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = rugged)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = cont_africa,
group = cont_africa),
alpha = 1/4) +
geom_line(data = fit.7.5,
aes(y = Estimate,
color = cont_africa,
group = cont_africa)) +
geom_point(aes(y = log_gdp, color = cont_africa),
size = 2/3) +
scale_x_continuous(expand = c(0, 0)) +
labs(x = "Terrain Ruggedness Index",
y = "log GDP from year 2000") +
theme(text = element_text(family = "Times"),
legend.position = c(.69, .94),
legend.title = element_blank(),
legend.direction = "horizontal")  +
facet_wrap(~cont_africa)
nd <-
tibble(rugged = rep(seq(from = 0,
to = 6.3,
length.out = 30),
times = 2),
cont_africa = rep(0:1, each = 30))
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = rugged)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = cont_africa,
group = cont_africa),
alpha = 1/4) +
geom_line(data = fit.7.5,
aes(y = Estimate,
color = cont_africa,
group = cont_africa)) +
geom_point(aes(y = log_gdp, color = cont_africa),
size = 2/3) +
scale_x_continuous(expand = c(0, 0)) +
labs(x = "Terrain Ruggedness Index",
y = "log GDP from year 2000") +
theme(text = element_text(family = "Times"),
legend.position = "none") +
facet_wrap(~cont_africa)
p7.5 <- posterior_samples(m7.5)
p7.5
p7.5 %>% head()
p7.5 <- posterior_samples(m7.5)
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged) %>%
select(gamma_Africa, gamma_notAfrica) %>%
gather(value, key) %>%
group_by(key) %>%
summarise(mean = mean(value))
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged)
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged) %>%
select(gamma_Africa, gamma_notAfrica)
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged) %>%
select(gamma_Africa, gamma_notAfrica) %>%
gather(value, key)
p7.5 <- posterior_samples(m7.5)
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged) %>%
select(gamma_Africa, gamma_notAfrica) %>%
gather(key, value) %>%
group_by(key) %>%
summarise(mean = mean(value))
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged) %>%
select(gamma_Africa, gamma_notAfrica) %>%
gather(key, value) %>%
ggplot(aes(x = value, group = key, color = key, fill = key)) +
theme_pander() +
scale_color_pander() +
scale_fill_pander() +
geom_density(alpha = 1/4) +
scale_x_continuous(expression(gamma), expand = c(0, 0)) +
scale_y_continuous(NULL, breaks = NULL) +
labs(title = "Terraine Ruggedness slopes",
subtitle = "Blue = African nations, Green = others") +
theme(text = element_text(family = "Times"),
legend.position = "none")
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged) %>%
select(gamma_Africa, gamma_notAfrica) %>%
gather(key, value) %>%
ggplot(aes(x = value, group = key, color = key, fill = key)) +
theme_pander() +
scale_color_pander() +
scale_fill_pander() +
geom_density(alpha = 1/4) +
scale_x_continuous(expression(gamma), expand = c(0, 0)) +
scale_y_continuous(NULL, breaks = NULL) +
labs(title = "Terraine Ruggedness slopes",
subtitle = "Blue = African nations, Green = others") +
theme(text = element_text(family = "Times"))
p7.5 %>%
mutate(gamma_Africa = b_rugged + `b_rugged:cont_africa`,
gamma_notAfrica = b_rugged,
diff = gamma_Africa -gamma_notAfrica) %>%
summarise(Proportion_of_the_difference_below_0 = sum(diff < 0)/length(diff))
p7.5
nd <-
tibble(rugged = range(dd$rugged),
cont_africa = c(0:1))
nd
nd <-
tibble(rugged = rep(range(dd$rugged),
times = 2),
cont_africa = rep(0:1, each = 2))
nd
fit.7.5.low <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
fit.7.5.low
nd <-
tibble(rugged = range(dd$rugged)[0],
cont_africa = c(0,1))
range(dd$rugged)[0]
range(dd$rugged)
range(dd$rugged)
range(dd$rugged)[0]
range_rugged <- range(dd$rugged)
nd <-
tibble(rugged = range_rugged[0],
cont_africa = c(0,1))
range_rugged[0]
range_rugged
range_rugged(1)
range_rugged[1]
nd <-
tibble(rugged = range_rugged[1],
cont_africa = c(0,1))
fit.7.5.low <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
fit.7.5.low
nd <-
tibble(rugged = range_rugged[2],
cont_africa = c(0,1))
fit.7.5.high <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp, color = cont_africa),
size = 2/3)
nd <-
tibble(rugged = range_rugged[1],
cont_africa = c("Africa", "not Africa"))
fit.7.5.low <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
nd <-
tibble(rugged = range_rugged[2],
cont_africa = c("Africa", "not Africa"))
fit.7.5.high <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
nd <-
tibble(rugged = range_rugged[1],
cont_africa = c(0,1))
fit.7.5.low <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
fit.7.5.low <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
nd <-
tibble(rugged = range_rugged[2],
cont_africa = c(0,1))
fit.7.5.high <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp, color = cont_africa),
size = 2/3) +
geom_ribbon(data = fit.7.5.low,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = cont_africa,
group = cont_africa),
alpha = 1/4) +
geom_line(data = fit.7.5.low,
aes(y = Estimate,
color = cont_africa,
group = cont_africa))
fit.7.5.low
nd <-
tibble(rugged = rep(range(dd$rugged), times = 2),
cont_africa = rep(c(0,1), each = 2))
nd
nd <-
tibble(rugged = rep(range(dd$rugged), times = 2),
cont_africa = rep(c(0,1), each = 2),
Median = rep(c("Below", "Above"), times = 2))
nd
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
fit.7.5
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3)
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3) +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = median_metric,
group = median_metric),
alpha = 1/4) +
geom_line(data = fit.7.5.low,
aes(y = Estimate,
color = median_metric,
group = median_metric))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3) +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = median_metric,
group = median_metric),
alpha = 1/4)
fit.7.5
nd <-
tibble(rugged = rep(range(dd$rugged), times = 2),
cont_africa = rep(c(0,1), each = 2),
median_metric = rep(c("Below", "Above"), times = 2))
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3) +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = median_metric,
group = median_metric),
alpha = 1/4) +
geom_line(data = fit.7.5,
aes(y = Estimate,
color = median_metric,
group = median_metric))
nd <-
tibble(rugged = rep(range(dd$rugged), times = 2),
cont_africa = rep(c(0,1), each = 2),
ruggedness = rep(c("Minimum", "Maximum"), times = 2))
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3) +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = ruggedness,
group = ruggedness),
alpha = 1/4) +
geom_line(data = fit.7.5,
aes(y = Estimate,
color = ruggedness,
group = ruggedness)) +
scale_x_continuous(expand = c(0, 0)) +
labs(x = "Continent",
y = "log GDP from year 2000") +
theme(text = element_text(family = "Times"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3) +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = ruggedness,
group = ruggedness),
alpha = 1/4) +
geom_line(data = fit.7.5,
aes(y = Estimate,
color = ruggedness,
group = ruggedness))
nd <-
tibble(rugged = rep(range(dd$rugged), times = 2),
cont_africa = rep(c(0,1), each = 2),
ruggedness = rep(c("Minimum", "Maximum"), times = 2))
fit.7.5 <- fitted(m7.5, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd) %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa"))
dd %>%
mutate(cont_africa = ifelse(cont_africa == 1, "Africa", "not Africa")) %>%
ggplot(aes(x = cont_africa)) +
theme_pander() +
scale_colour_pander() +
scale_fill_pander() +
geom_point(aes(y = log_gdp),
size = 2/3) +
geom_ribbon(data = fit.7.5,
aes(ymin = `2.5%ile`,
ymax = `97.5%ile`,
fill = ruggedness,
group = ruggedness),
alpha = 1/4) +
geom_line(data = fit.7.5,
aes(y = Estimate,
color = ruggedness,
group = ruggedness)) +
labs(x = "Continent",
y = "log GDP from year 2000") +
theme(text = element_text(family = "Times"))
library(rethinking)
data(tulips)
d <- tulips
detach(package:rethinking, unload = T)
rm(tulips)
glimpse(d)
library(rethinking)
data(tulips)
d <- tulips
detach(package:rethinking, unload = T)
rm(tulips)
glimpse(d)
m7.6 <-
brm(data = d, family = gaussian,
blooms ~ 1 + water + shade,
prior = c(set_prior("normal(0, 100)", class = "Intercept"),
set_prior("normal(0, 100)", class = "b"),
set_prior("cauchy(0, 1)", class = "sigma")),
iter = 2000, warmup = 1000, cores = 4, chains = 4)
m7.7 <-
brm(data = d, family = gaussian,
blooms ~ 1 + water + shade + water:shade,
prior = c(set_prior("normal(0, 100)", class = "Intercept"),
set_prior("normal(0, 100)", class = "b"),
set_prior("uniform(0, 100)", class = "sigma")),
iter = 2000, warmup = 1000, cores = 4, chains = 4)
m7.6 <-
brm(data = d, family = gaussian,
blooms ~ 1 + water + shade,
prior = c(set_prior("normal(0, 100)", class = "Intercept"),
set_prior("normal(0, 100)", class = "b"),
set_prior("cauchy(0, 10)", class = "sigma")),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
control = list(adapt_delta = 0.9))
m7.7 <-
brm(data = d, family = gaussian,
blooms ~ 1 + water + shade + water:shade,
prior = c(set_prior("normal(0, 100)", class = "Intercept"),
set_prior("normal(0, 100)", class = "b"),
set_prior("cauchy(0, 10)", class = "sigma")),
iter = 2000, warmup = 1000, cores = 4, chains = 4,
control = list(adapt_delta = 0.9))
fixef(m7.6) %>% round(digits = 2)
fixef(m7.7) %>% round(digits = 2)
fixef(m7.7) %>% round(digits = 2)
d <-
d %>%
mutate(shade.c = shade - mean(shade),
water.c = water - mean(water))
m7.8 <-
brm(data = d, family = gaussian,
blooms ~ 1 + water.c + shade.c,
prior = c(set_prior("normal(130, 100)", class = "Intercept"),
set_prior("normal(0, 100)", class = "b"),
set_prior("cauchy(0, 10)", class = "sigma")),
chains = 4, iter = 2000, warmup = 1000, cores = 4,
control = list(adapt_delta = 0.9))
m7.9 <-
brm(data = d, family = gaussian,
blooms ~ 1 + water.c + shade.c + water.c:shade.c,
prior = c(set_prior("normal(130, 100)", class = "Intercept"),
set_prior("normal(0, 100)", class = "b"),
set_prior("cauchy(0, 10)", class = "sigma")),
chains = 4, iter = 2000, warmup = 1000, cores = 4,
control = list(adapt_delta = 0.9))
# loop over values of waterC and plot predictions
shade.seq <- -1:1
for(w in -1:1){
# defining the subset of the original data
dt <- d[d$water.c == w, ]
# defining our new data
nd <- tibble(water.c = w, shade.c = shade.seq)
# using our sampling skills, like before
fit.7.9 <- fitted(m7.9, newdata = nd) %>%
as_tibble() %>%
bind_cols(nd)
# specifying our custom plot
fig <- ggplot() + # can't seem to get the name to work dynamically (e.g., paste("fig", w, sep = "_") returns an error). Hit a brother up if you can figure out how to code this correctly such that the loop returns three objects: fig_-1, fig_0, and fig_1
theme_pander() +
geom_ribbon(data = fit.7.9,
aes(x = shade.c,
ymin = `2.5%ile`,
ymax = `97.5%ile`),
fill = "#CC79A7", alpha = 1/5) +
geom_line(data = fit.7.9, aes(x = shade.c, y = Estimate),
color = "#CC79A7") +
geom_point(data = dt, aes(x = shade.c, y = blooms),
color = "#CC79A7") +
coord_cartesian(xlim = c(-1, 1), ylim = c(0, 350)) +
scale_x_continuous(breaks = c(-1, 0, 1)) +
labs(x = "Shade (centered)", y = "Blooms",
title = paste("Water (centered) =", w)) +
theme(text = element_text(family = "Times"))
# plotting that joint
plot(fig)
}
marginal_effects(b7.3)
marginal_effects(m7.3)
plot(marginal_effects(b7.3), points = T)
plot(marginal_effects(m7.3), points = T)
plot(marginal_effects(m7.3,
spaghetti = T, nsamples = 200),
points = T,
point_args = c(alpha = 1/2, size = 1))
